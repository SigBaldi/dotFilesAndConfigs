
######################
#                    #
#  Custom Functions  #
#                    #
######################

# Extract files
extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.7z)        7z x $1        ;;
            *.bz2)       bunzip2 $1     ;;
            *.gz)        gunzip $1      ;;
            *.rar)       unrar x $1     ;;
            *.tar)       tar xvf $1     ;;
            *.tar.bz2)   tar xvjf $1    ;;
            *.tar.gz)    tar xvzf $1    ;;
            *.tar.xz)    tar xvJf $1    ;;
            *.tbz2)      tar xvjf $1    ;;
            *.tgz)       tar xvzf $1    ;;
            *.Z)         uncompress $1  ;;
            *.zip)       unzip $1       ;;
            *)           echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Create a new directory and enter it
function mkd takedir() {
  mkdir -p $@ && cd ${@:$#}
}

# Take a git repo from the internet, clone it, and cd into it
function takegit() {
  git clone "$1"
  cd "$(basename ${1%%.git})"
}

# Take a file or directory from the internet and extract it
function takeurl() {
  local data thedir
  data="$(mktemp)"
  curl -L "$1" > "$data"
  extract "$data"
  thedir="$(tar tf "$data" | head -n 1)"
  rm "$data"
  cd "$thedir"
}

# Main take function to handle different types of input
function take() {
    if [[ $1 =~ ^(https?|ftp).*\.(7z|bz2|gz|rar|tar\.(gz|bz2|xz)|tbz2|tgz|Z|zip)) ]]; then
    takeurl "$1"
  elif [[ $1 =~ ^([A-Za-z0-9]\+@|https?|git|ssh|ftps?|rsync).*\.git/?$ ]]; then
    takegit "$1"
  else
    takedir "$@"
  fi
}